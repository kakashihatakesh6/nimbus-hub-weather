/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useState, useEffect } from 'react'
import WeatherHour from '@/components/WeatherHour';

export default function Home() {

  const [data, setData] = useState();
  const [cwdata, setCwdata] = useState(null);
  const [inputvalue, setinputvalue] = useState('')
  const [isLoading, setIsloading] = useState(false)
  const [error, seterror] = useState()
  const [weather, setWeather] = useState('')
  const [dataStatus, setDataStatus] = useState(false)
  const [backgroundImage2, setbackgroundImage2] = useState();
  const [showBox, setShowBox] = useState(true);


  useEffect(() => {

    setbackgroundImage2(`/background/clear.jpg`)

    const currentDateTime = () => {
      const timeElement = document.getElementById('current-time');
      const dateElement = document.getElementById('current-date');
      const timeString = new Date().toLocaleTimeString().split(":")
      if (parseInt(timeString[0]) < 12) {
        timeElement.textContent = `0 ${timeString[0]}:${timeString[1]} ${timeString[2].split(" ")[1]}`;
        console.log("Parse Ho rha fu")
      }
      timeElement.textContent = `${timeString[0]}:${timeString[1]} ${timeString[2].split(" ")[1]}`;
      const dateString = new Date().toDateString().split(" ");
      dateElement.textContent = `${dateString[0]} \n ${dateString.splice(1, 3)} `;
    }


    currentDateTime()
    setInterval(currentDateTime, 1000);

  }, [])

  const handleOnchange = (e) => {
    setinputvalue(e.target.value)
  }

  // User Submit
  const handleKeyPress = (e) => {
    if (e.key == "Enter" && inputvalue !== "") {

      // Fetching data from API
      fetchWeatherData();
      // tho

    }
  }

  // Fetching Data Function
  const fetchWeatherData = async () => {

    const currentWeatherApi = `https://api.openweathermap.org/data/2.5/weather?q=delhi&units=metric&appid=cd8990ee519781a0bc6968e77b06a2bc`;
    const threeHourApi = `https://api.openweathermap.org/data/2.5/forecast?q={city}&units=metric&appid=cd8990ee519781a0bc6968e77b06a2bc`;

    const cityName = inputvalue;

    try {

      // Start Loading
      // setShowBox(true)
      setIsloading(true)

      const urlCurrentWeather = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=cd8990ee519781a0bc6968e77b06a2bc`;
      const url3Hour = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&units=metric&appid=cd8990ee519781a0bc6968e77b06a2bc&cnt=10`;

      // Fetching weather data from api 
      const [cwdata, data] = await Promise.all([
        fetch(urlCurrentWeather).then(res => res.json()),
        fetch(url3Hour).then(res => res.json())
      ])



      // Processing data 
      if (cwdata.cod === "404") {
        setIsloading(false)
        setDataStatus(false)
        throw new Error(data.message);
      }

      setData(data)
      setCwdata(cwdata)

      // Set Values
      setWeather(cwdata.weather[0].main)
      setbackgroundImage2(`/background/${weather}.jpg?${new Date().getTime()}`);

      // Stop Loading

      setDataStatus(true)
      setIsloading(false)
      setShowBox(false)

    } catch (error) {
      seterror("Please enter a valid city name")
    }

  }



  return (
    <>
      <Head>
        <title>Nimbus Hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="weather-favicon.png" />
      </Head>

      <main className={`${styles.homeMain}`} id='home-main' style={{ backgroundImage: `url(${backgroundImage2})` }}>


        <section className={styles.weatherSection} id='weather-section'>

          <div className="row input-container justify-content-center">
            <div className="container d-flex flex-column align-items-center">

              <h3 className={styles.welcomeText}>Greetings, &nbsp;<span>Weather Enthusiast!</span></h3>

              <div className={styles.searchContainer}>

                <input type="text" className={`search-input ${styles.searchInput}`} value={inputvalue} onChange={handleOnchange}
                  placeholder="Enter your city name" name='city' aria-label="city" onKeyDown={handleKeyPress} required />

                <span>
                  <i className="bi bi-search" ></i>
                </span>
              </div>

              {/* Error Message */}
              {error && !dataStatus && !isLoading && <p className={styles.errorMessage}>{error}</p>}

            </div>

          </div>

          <div className="row " >
            <div className={`container ${styles.timeContainer}`} style={{ display: `${!dataStatus ? "flex" : "none"}` }}>
              <span><p className="display-2 my-3" id='current-time'></p></span>
              <h3 className="mb-0" id='current-date'></h3>

            </div>
          </div>


        </section>

        <div className="weatherHour" id='weather-hour'>

          {isLoading && <div className={`spinner-border ${styles.loadingIcon}`} role="status">
            <span className="visually-hidden">Loading...</span>
          </div>}

          {data && !isLoading && <WeatherHour data={data} cwdata={cwdata} showBox={showBox} weather={weather} />}

        </div>
      </main>



      {/* <!-- ======= Footer ======= --> */}
      <footer className={styles.footer} id="footer">


        <div>
          <h3>Nimbus-Hub</h3>
          <p>Lorem ipsum, dolor sit elit. Saepe, sit. Error ex maiores voluptates a.</p>
        </div>

        <div className='d-flex flex-column justify-content-center'>
          <div className={`${styles.credits} text-center`}>
            Designed by <a href="">Nikhil</a>
          </div>
          <div className={styles.copyright}>
            Copyright &copy; <strong><span>Nimbus-Hub</span></strong>. All Rights Reserved
          </div>
        </div>

        <div className={styles.socialLinks}>
          <a href="#" className="twitter"><i className="bi bi-twitter"></i></a>
          <a href="#" className="facebook"><i className="bi bi-facebook"></i></a>
          <a href="#" className="instagram"><i className="bi bi-instagram"></i></a>
          <a href="#" className="google-plus"><i className="bi bi-git"></i></a>
          <a href="#" className="linkedin"><i className="bi bi-linkedin"></i></a>
        </div>


      </footer>
      {/*<!-- End Footer --> */}



    </>
  )
}
